42.0 APEX_CODE,FINEST;APEX_PROFILING,INFO;CALLOUT,INFO;DB,INFO;SYSTEM,DEBUG;VALIDATION,INFO;VISUALFORCE,INFO;WAVE,INFO;WORKFLOW,INFO
Execute Anonymous: /*List<testJSRemotingFileUploadController.test_Wrapper> wrappers = new List<testJSRemotingFileUploadController.test_Wrapper>();
Execute Anonymous: testJSRemotingFileUploadController.test_Wrapper wrapper = new testJSRemotingFileUploadController.test_Wrapper();
Execute Anonymous: wrapper.testField = 'abc';
Execute Anonymous: wrappers.add(wrapper);*/
Execute Anonymous: 
Execute Anonymous: /*AccountToLeadConveterController batchTest = new AccountToLeadConveterController();
Execute Anonymous: Database.executeBatch(batchTest);*/
Execute Anonymous: 
Execute Anonymous: //###Code to Generate Random Strings###//
Execute Anonymous: /*Integer[] alphs= new Integer[26];
Execute Anonymous: //Populate char array
Execute Anonymous: for (Integer i=0; i<26;i++){
Execute Anonymous:     alphs[i] = i+65;
Execute Anonymous: }
Execute Anonymous: //Generating a random string
Execute Anonymous: List<String> randomStrs = new List<String>();
Execute Anonymous: for (Integer count=0; count<100;count++){
Execute Anonymous:     List<Integer> randomChars = new List<Integer>();
Execute Anonymous:     randomChars.clear();
Execute Anonymous:     for (Integer i=0; i<5;i++){
Execute Anonymous:         randomChars.add(alphs[Math.mod((Integer)(Math.Random()*100),26)]);
Execute Anonymous:     }
Execute Anonymous:     System.debug(String.fromCharArray(randomChars));
Execute Anonymous:     randomStrs.add(String.fromCharArray(randomChars));
Execute Anonymous: }*/
Execute Anonymous: 
Execute Anonymous: /*//###Code to calculte frequency of Random Output###//
Execute Anonymous: List<Double> rndms = new List<Double>();
Execute Anonymous: Integer numOfNums = 100; //Number of random numbs to be generated
Execute Anonymous: Integer maxRange = 100; //Number by which the random numbers will be multiplied
Execute Anonymous: Integer intrvalSize = 10;//This number represents the size of the intervals in the final frequency distribution
Execute Anonymous: //Generating random numbers
Execute Anonymous: for(Integer i=0;i<numOfNums;i++){
Execute Anonymous:     rndms.add(Math.random()*100);
Execute Anonymous:     //System.debug(rndms.get(rndms.size()-1));
Execute Anonymous: }
Execute Anonymous: List<Integer> ranges = new List<Integer>();
Execute Anonymous: //Calculating ranges
Execute Anonymous: for (Integer i=0; i<=maxRange;i+=intrvalSize){
Execute Anonymous:    	ranges.add(i);
Execute Anonymous: }
Execute Anonymous: System.debug(ranges);
Execute Anonymous: //Calculating frequency*/
Execute Anonymous: 
Execute Anonymous: testClass2 tc2 = new testClass2();
15:56:02.1 (1272385)|USER_INFO|[EXTERNAL]|005280000030kgN|himansh@nagarro.com|India Standard Time|GMT+05:30
15:56:02.1 (1299975)|EXECUTION_STARTED
15:56:02.1 (1304893)|CODE_UNIT_STARTED|[EXTERNAL]|execute_anonymous_apex
15:56:02.1 (8607527)|VARIABLE_SCOPE_BEGIN|[45]|tc2|testClass2|true|false
15:56:02.1 (8763464)|HEAP_ALLOCATE|[72]|Bytes:3
15:56:02.1 (8801670)|HEAP_ALLOCATE|[77]|Bytes:152
15:56:02.1 (8821853)|HEAP_ALLOCATE|[342]|Bytes:408
15:56:02.1 (8841491)|HEAP_ALLOCATE|[355]|Bytes:408
15:56:02.1 (8859535)|HEAP_ALLOCATE|[467]|Bytes:48
15:56:02.1 (8898197)|HEAP_ALLOCATE|[139]|Bytes:6
15:56:02.1 (8919623)|HEAP_ALLOCATE|[EXTERNAL]|Bytes:2
15:56:02.1 (8949811)|STATEMENT_EXECUTE|[1]
15:56:02.1 (8953341)|STATEMENT_EXECUTE|[45]
15:56:02.1 (8958742)|HEAP_ALLOCATE|[45]|Bytes:1
15:56:02.1 (8966655)|HEAP_ALLOCATE|[45]|Bytes:1
15:56:02.1 (9006428)|METHOD_ENTRY|[1]|01p0I00000FiPXz|testClass2.testClass2()
15:56:02.1 (9015649)|STATEMENT_EXECUTE|[1]
15:56:02.1 (9020338)|STATEMENT_EXECUTE|[1]
15:56:02.1 (9062418)|HEAP_ALLOCATE|[50]|Bytes:5
15:56:02.1 (9084722)|HEAP_ALLOCATE|[56]|Bytes:5
15:56:02.1 (9095979)|HEAP_ALLOCATE|[64]|Bytes:7
15:56:02.1 (9124400)|SYSTEM_MODE_ENTER|false
15:56:02.1 (9136045)|HEAP_ALLOCATE|[45]|Bytes:5
15:56:02.1 (9150350)|SYSTEM_MODE_EXIT|false
15:56:02.1 (9162784)|METHOD_EXIT|[1]|testClass2
15:56:02.1 (9178017)|HEAP_ALLOCATE|[45]|Bytes:4
15:56:02.1 (9214548)|SYSTEM_MODE_ENTER|false
15:56:02.1 (9236480)|HEAP_ALLOCATE|[45]|Bytes:5
15:56:02.1 (9270610)|CONSTRUCTOR_ENTRY|[45]|01p0I00000FiPXz|<init>()
15:56:02.1 (9308595)|VARIABLE_SCOPE_BEGIN|[4]|this|testClass2|true|false
15:56:02.1 (9366452)|VARIABLE_ASSIGNMENT|[4]|this|{}|0x621a3f14
15:56:02.1 (9387009)|HEAP_ALLOCATE|[5]|Bytes:5
15:56:02.1 (9394279)|STATEMENT_EXECUTE|[1]
15:56:02.1 (9402681)|HEAP_ALLOCATE|[5]|Bytes:5
15:56:02.1 (9415342)|HEAP_ALLOCATE|[5]|Bytes:6
15:56:02.1 (9464478)|STATEMENT_EXECUTE|[4]
15:56:02.1 (9467479)|STATEMENT_EXECUTE|[5]
15:56:02.1 (17182816)|HEAP_ALLOCATE|[5]|Bytes:104
15:56:02.1 (17209394)|HEAP_ALLOCATE|[5]|Bytes:3
15:56:02.1 (17230952)|HEAP_ALLOCATE|[5]|Bytes:12
15:56:02.1 (17265897)|CONSTRUCTOR_ENTRY|[5]|01p28000009r8Az|<init>()
15:56:02.1 (17350508)|VARIABLE_SCOPE_BEGIN|[4]|this|testClass.testInnerClass|true|false
15:56:02.1 (17423121)|VARIABLE_ASSIGNMENT|[4]|this|{}|0x35a6abf0
15:56:02.1 (17466621)|STATEMENT_EXECUTE|[4]
15:56:02.1 (17470319)|STATEMENT_EXECUTE|[6]
15:56:02.1 (17472719)|STATEMENT_EXECUTE|[7]
15:56:02.1 (17479315)|CONSTRUCTOR_EXIT|[5]|01p28000009r8Az|<init>()
15:56:02.1 (17491532)|VARIABLE_SCOPE_BEGIN|[5]|innerObj|testClass.testInnerClass|true|false
15:56:02.1 (17520750)|VARIABLE_ASSIGNMENT|[5]|innerObj|{}|0x35a6abf0
15:56:02.1 (17530956)|STATEMENT_EXECUTE|[6]
15:56:02.1 (17536072)|HEAP_ALLOCATE|[6]|Bytes:3
15:56:02.1 (17629529)|VARIABLE_ASSIGNMENT|[EXTERNAL]|this|{}|0x35a6abf0
15:56:02.1 (17653331)|VARIABLE_ASSIGNMENT|[EXTERNAL]|value|"abc"
15:56:02.1 (17673193)|VARIABLE_ASSIGNMENT|[6]|this.testProp1|"abc"|0x35a6abf0
15:56:02.1 (17692353)|STATEMENT_EXECUTE|[7]
15:56:02.1 (17738718)|VARIABLE_ASSIGNMENT|[EXTERNAL]|this|{"testProp1":"abc"}|0x35a6abf0
15:56:02.1 (17784552)|USER_DEBUG|[7]|DEBUG|abc
15:56:02.1 (17809394)|CONSTRUCTOR_EXIT|[45]|01p0I00000FiPXz|<init>()
15:56:02.1 (17850275)|SYSTEM_MODE_EXIT|false
15:56:02.1 (17888244)|VARIABLE_ASSIGNMENT|[45]|tc2|{}|0x621a3f14
15:56:02.17 (17940106)|CUMULATIVE_LIMIT_USAGE
15:56:02.17 (17940106)|LIMIT_USAGE_FOR_NS|(default)|
  Number of SOQL queries: 0 out of 100
  Number of query rows: 0 out of 50000
  Number of SOSL queries: 0 out of 20
  Number of DML statements: 0 out of 150
  Number of DML rows: 0 out of 10000
  Maximum CPU time: 0 out of 10000
  Maximum heap size: 0 out of 6000000
  Number of callouts: 0 out of 100
  Number of Email Invocations: 0 out of 10
  Number of future calls: 0 out of 50
  Number of queueable jobs added to the queue: 0 out of 50
  Number of Mobile Apex push calls: 0 out of 10

15:56:02.17 (17940106)|CUMULATIVE_LIMIT_USAGE_END

15:56:02.1 (17977603)|CODE_UNIT_FINISHED|execute_anonymous_apex
15:56:02.1 (19484363)|EXECUTION_FINISHED
